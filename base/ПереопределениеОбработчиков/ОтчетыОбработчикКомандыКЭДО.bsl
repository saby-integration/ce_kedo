Процедура ЗаполнитьЗначенияПериода(КомпоновщикНастроек, ПараметрыВызова)
	Для Каждого ПараметрДанных Из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если ПараметрДанных.Параметр = 
			Новый ПараметрКомпоновкиДанных("ДатаОтчета") И ПараметрДанных.Использование Тогда
			ПользовательскийПараметр = 
				КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
					ПараметрДанных.ИдентификаторПользовательскойНастройки);
			ПараметрыВызова.Вставить("НачалоПериода", ПользовательскийПараметр.Значение.Дата);
			ПараметрыВызова.Вставить("КонецПериода", ПользовательскийПараметр.Значение.Дата);
		КонецЕсли;
		Если ПараметрДанных.Параметр =
			Новый ПараметрКомпоновкиДанных("Период") И ПараметрДанных.Использование Тогда
			ПользовательскийПараметр = 
				КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
					ПараметрДанных.ИдентификаторПользовательскойНастройки);
			ПараметрыВызова.Вставить("НачалоПериода", ПользовательскийПараметр.Значение.ДатаНачала);
			ПараметрыВызова.Вставить("КонецПериода", ПользовательскийПараметр.Значение.ДатаОкончания);
			ПараметрыВызова.Вставить("ИдентификаторПериод", ПользовательскийПараметр.ИдентификаторПользовательскойНастройки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура Saby_ЗаполнитьЗначениеПараметраОтбора(ПараметрыВызова, Реквизит, Значение, Идентификатор)
	
КонецПроцедуры

Процедура Saby_ЗаполнитьЗначенияПараметровОтбора(КомпоновщикНастроек, ПараметрыВызова)
	ВидСравненияПодразделения = "ВидСравненияПодразделения";
	ВидСравненияФизическиеЛица = "ВидСравненияФизическиеЛица";
	ВидСравненияОрганизация = "ВидСравненияОрганизация";
	ВидСравненияСотрудники = "ВидСравненияСотрудники";
	
	ЕстьФильтрПоОрганизации = "ЕстьФильтрПоОрганизации";
	ЕстьФильтрПоПодразделениям = "ЕстьФильтрПоПодразделениям";
	
	ИдентификаторОрганизация = "ИдентификаторОрганизация";
	ИдентификаторПодразделение = "ИдентификаторПодразделение";
	
	Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) <> Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(ЭлементОтбора.ИдентификаторПользовательскойНастройки) Тогда
			Продолжить;
		КонецЕсли;
		
		ПользовательскийОтбор = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
		ИдентификаторПользовательскойНастройки = ПользовательскийОтбор.ИдентификаторПользовательскойНастройки;
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") Тогда
			ПараметрыВызова.Вставить(ВидСравненияОрганизация, ПользовательскийОтбор.ВидСравнения);
			ПараметрыВызова.Вставить("Организация", ПользовательскийОтбор.ПравоеЗначение);
			ПараметрыВызова.Вставить(ЕстьФильтрПоОрганизации, ПользовательскийОтбор.Использование);
			ПараметрыВызова.Вставить(ИдентификаторОрганизация, ИдентификаторПользовательскойНастройки);
		КонецЕсли;

		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТекущаяОрганизация") Тогда
			ПараметрыВызова.Вставить(ВидСравненияОрганизация, ПользовательскийОтбор.ВидСравнения);
			ПараметрыВызова.Вставить("Организация", ПользовательскийОтбор.ПравоеЗначение);
			ПараметрыВызова.Вставить(ЕстьФильтрПоОрганизации, ПользовательскийОтбор.Использование);
			ПараметрыВызова.Вставить(ИдентификаторОрганизация, ИдентификаторПользовательскойНастройки);
		КонецЕсли;
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ФизическоеЛицо") Тогда
			ПараметрыВызова.Вставить(ВидСравненияФизическиеЛица, ПользовательскийОтбор.ВидСравнения);
			ПараметрыВызова.Вставить("ФизическиеЛица", ПользовательскийОтбор.ПравоеЗначение);
			ПараметрыВызова.Вставить("ЕстьФильтрПоФизическимЛицам", ПользовательскийОтбор.Использование);
			ПараметрыВызова.Вставить("ИдентификаторФизическоеЛицо", ИдентификаторПользовательскойНастройки);
		КонецЕсли;
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПодразделениеГоловногоСотрудникаНаКонецПериода") Тогда
			ПараметрыВызова.Вставить(ВидСравненияПодразделения, ПользовательскийОтбор.ВидСравнения);
			ПараметрыВызова.Вставить("Подразделения", ПользовательскийОтбор.ПравоеЗначение);
			ПараметрыВызова.Вставить(ЕстьФильтрПоПодразделениям, ПользовательскийОтбор.Использование );
			ПараметрыВызова.Вставить(ИдентификаторПодразделение, ИдентификаторПользовательскойНастройки);
		КонецЕсли;
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение") Тогда
			ПараметрыВызова.Вставить(ВидСравненияПодразделения, ПользовательскийОтбор.ВидСравнения);
			ПараметрыВызова.Вставить("Подразделения", ПользовательскийОтбор.ПравоеЗначение);
			ПараметрыВызова.Вставить(ЕстьФильтрПоПодразделениям, ПользовательскийОтбор.Использование);
			ПараметрыВызова.Вставить(ИдентификаторПодразделение, ИдентификаторПользовательскойНастройки);
		КонецЕсли;
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сотрудник") Тогда
			ПараметрыВызова.Вставить(ВидСравненияСотрудники, ПользовательскийОтбор.ВидСравнения);
			ПараметрыВызова.Вставить("Сотрудники", ПользовательскийОтбор.ПравоеЗначение);
			ПараметрыВызова.Вставить("ЕстьФильтрПоСотрудникам", ПользовательскийОтбор.Использование);
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗначенияПериода(КомпоновщикНастроек, ПараметрыВызова);
КонецПроцедуры

Процедура Saby_ОбработчикКоманды_КЭДО(ФормаОтчета, Команда, Результат,context_params = Неопределено)
	ПараметрыВызова = Новый Структура;
	ПараметрыВызова.Вставить("НачалоПериода", 				Дата(1,1,1));
	ПараметрыВызова.Вставить("КонецПериода", 				Дата(1,1,1));
	ПараметрыВызова.Вставить("ФизическиеЛица", 				Неопределено);
	ПараметрыВызова.Вставить("Организация", 				Неопределено);
	ПараметрыВызова.Вставить("Подразделения", 				Неопределено);
	ПараметрыВызова.Вставить("Сотрудники", 					Неопределено);
	ПараметрыВызова.Вставить("ЕстьФильтрПоСотрудникам", 	Ложь);
	ПараметрыВызова.Вставить("ЕстьФильтрПоОрганизации", 	Ложь);
	ПараметрыВызова.Вставить("ЕстьФильтрПоПодразделениям", 	Ложь);
	ПараметрыВызова.Вставить("ЕстьФильтрПоФизическимЛицам",	Ложь);
	ПараметрыВызова.Вставить("ИдентификаторПериод",			"");
	ПараметрыВызова.Вставить("ИдентификаторФизическоеЛицо",	"");
	ПараметрыВызова.Вставить("ИдентификаторОрганизация",	"");
	ПараметрыВызова.Вставить("ИдентификаторПодразделение",	"");
	ПараметрыВызова.Вставить("ИдентификаторСотрудник",		"");
	
	Если 	ФормаОтчета.ИмяФормы = "Отчет.АнализНачисленийИУдержаний.Форма" Тогда
		
		Saby_ЗаполнитьЗначенияПараметровОтбора(ФормаОтчета.Отчет.КомпоновщикНастроек, ПараметрыВызова);
		ПараметрыВызова.Вставить("КлючВарианта", ФормаОтчета.ВариантыПанелиКлючТекущегоВарианта); 
		Если Команда.Имя = "Saby_КЭДО_ОтправитьРасчетныйЛистокВСбис" Тогда	
			Saby_КомандыОбменаДляФормыКлиент.ОтправитьРасчетныйЛистокВСБИС(ПараметрыВызова,context_params);
		ИначеЕсли Команда.Имя = "Saby_КЭДО_ОтправитьСокращенныйРасчетныйЛистокВСбис" Тогда	
			Saby_КомандыОбменаДляФормыКлиент.ОтправитьСокращенныйРасчетныйЛистокВСБИС(ПараметрыВызова, context_params);
		ИначеЕсли Команда.Имя = "Saby_КЭДО_ОтправитьПрочийКадровыйРасчетныйЛистокВСбис" Тогда
			СписокРегламента = Saby_ВстраиваниеВСтандартныеФормы.ПолучитьСписокРегламентов("CadresOther");
			ВыборРегламент = Новый СписокЗначений();
			ВыборРегламент.Добавить(Неопределено, "По умолчанию");
			Для каждого СтрРегл из СписокРегламента Цикл
				ВыборРегламент.Добавить(СтрРегл["Name"], СтрРегл["Name"]);	
			КонецЦикла;	
			Оповещение = Новый ОписаниеОповещения("ОтправитьПрочийКадровыйРасчетныйЛистокВСБИС", ЭтотОбъект, ПараметрыВызова );
			ВыборРегламент.ПоказатьВыборЭлемента(Оповещение,"Выберите регламент");
		Иначе
			// А иначе тут будут обрабоатываться все команды 1С
			// Поэтому просто еще раз установка результата
			Результат = Истина;
		КонецЕсли;	
		
		Результат = Истина;
		
	КонецЕсли;

	Если ФормаОтчета.ИмяФормы = "Отчет.ОстаткиОтпусков.Форма" Тогда
		Saby_ЗаполнитьЗначенияПараметровОтбора(ФормаОтчета.Отчет.КомпоновщикНастроек, ПараметрыВызова);
		Если Команда.Имя = "Saby_КЭДО_ЗагрузитьДанныеВSABY" Тогда	
			Saby_КомандыОбменаДляФормыКлиент.ВыполнитьПроизвольныйИНИ("ОстаткиОтпусков_send", ПараметрыВызова);
		КонецЕсли;	
		Если Команда.Имя = "Saby_КЭДО_ЗагрузитьВложенияВSABY" Тогда
			Saby_КомандыОбменаДляФормыКлиент.ВыполнитьПроизвольныйИНИ("ПрочийКадровыйОстаткиОтпусков_send", ПараметрыВызова);
		КонецЕсли;	
		Результат = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьПрочийКадровыйРасчетныйЛистокВСБИС(ВыбранныйРегламент, ПараметрыВызова) Экспорт
	Если ВыбранныйРегламент = Неопределено Тогда
		Сообщить("Отправка отменена");
		Возврат;
	Иначе		
		ПараметрыВызова.Вставить("Регламент", ВыбранныйРегламент.Значение);
	КонецЕсли;	
	Saby_КомандыОбменаДляФормыКлиент.ОтправитьПрочийКадровыйРасчетныйЛистокВСБИС(ПараметрыВызова);	
КонецПроцедуры	
