
&Вместо("ВидыКоманд")
Функция Saby_ВидыКоманд(Результат)
	
	Если Saby_Core.ТекущемуПользователюМожноРаботатьСоСБИС() ИЛИ
		Saby_Core.ВключеноИспользованиеПодсистемыКЕДО() Тогда
		// СБИС
		Вид				= Результат.Добавить();
		Вид.Заголовок	= "SABY";
		Вид.Имя			= "SABY_КОМАНДЫ";
		Вид.ИмяПодменю	= "Saby_СБИС";
		Вид.Порядок		= 20;
		Вид.Картинка    = Новый Картинка;
		Вид.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&После("ПриСозданииНаСервере")
Процедура Saby_ПриСозданииНаСервере(Форма, Знач ПараметрыРазмещения = Неопределено) Экспорт
	//Добавление колонок

	Если 
		Не Saby_ВстраиваниеВСтандартныеФормы.ЭтоФормаСписка(Форма) ИЛИ
		Saby_ВстраиваниеВСтандартныеФормы.ЭтоФормаИсключения(Форма) ИЛИ
		//Проверка прав
		НЕ Saby_Core.ТекущемуПользователюМожноРаботатьСоСБИС() ИЛИ
		НЕ Saby_Core.ВключеноИспользованиеПодсистемыКЕДО()
		Тогда
		Возврат; 
	КонецЕсли;
	Saby_ВстраиваниеВСтандартныеФормы.ДобавитьКолонкиВДинамическийСписок(Форма);
	
	//Если вдруг нужно раскрасить форму, колонку, нам сюда
	//Saby_КолонкиСостояния.УстановитьУсловноеОформление(Форма, НаименованиеРеквизитаСписок, ГруппаНастроек, ПараметрыКритерияОтбора, ГруппаПараметровКритерияОтбора, УспешноеВыполнение);
	
	//Придет время и нас попросят добавить на формы  отбора поле
	//Saby_КолонкиСостояния.УстановитьФильтры(Форма, НаименованиеРеквизитаСписок, ГруппаНастроек, ПараметрыКритерияОтбора, ГруппаПараметровКритерияОтбора, УспешноеВыполнение);
КонецПроцедуры

&ИзменениеИКонтроль("ВывестиКоманды")
Процедура Saby_ВывестиКомандыИзменениеИКонтроль(Форма, Команды, ПараметрыРазмещения)

	ПрефиксКоманд = "";
	Если ТипЗнч(ПараметрыРазмещения.ВладелецКоманд) = Тип("ТаблицаФормы") Тогда
		ПрефиксКоманд = "Элемент_" + ПараметрыРазмещения.ВладелецКоманд.Имя;
	ИначеЕсли ТипЗнч(ПараметрыРазмещения.ВладелецКоманд) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого Реквизит Из Форма.ПолучитьРеквизиты() Цикл
			Если Реквизит = ПараметрыРазмещения.ВладелецКоманд Тогда
				ПрефиксКоманд = "Реквизит_" + Реквизит.Имя;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ПараметрыРазмещения.ВладелецКоманд = ПрефиксКоманд;

	ПодключенныеКоманды = ПодключенныеКоманды(Форма);
	ПодключенныеКоманды.ВводНаОснованииЧерезПодключаемыеКоманды = ПараметрыРазмещения.ВводНаОснованииЧерезПодключаемыеКоманды;

	КлючПараметровРазмещения = КлючПараметровРазмещения(ПараметрыРазмещения);
	РанееДобавленныеКоманды = Неопределено;

	Если ПодключенныеКоманды.АдресТаблицыКоманд <> Неопределено И ЭтоАдресВременногоХранилища(ПодключенныеКоманды.АдресТаблицыКоманд) Тогда
		РанееДобавленныеКоманды = ПолучитьИзВременногоХранилища(ПодключенныеКоманды.АдресТаблицыКоманд);
		УдаляемыеКоманды = РанееДобавленныеКоманды.НайтиСтроки(Новый Структура("КлючПараметровРазмещения", КлючПараметровРазмещения));
		УдалитьКоманды(Форма, УдаляемыеКоманды);
		Для Каждого Команда Из УдаляемыеКоманды Цикл
			КоллекцияКоманд = ПодключенныеКоманды.КомандыСПометкой;
			Для Индекс = -КоллекцияКоманд.ВГраница() По 0 Цикл
				КомандаПодменю = КоллекцияКоманд[-Индекс];
				Если КомандаПодменю.ИмяВФорме = Команда.ИмяВФорме Тогда
					КоллекцияКоманд.Удалить(-Индекс);
				КонецЕсли;
			КонецЦикла;
			Для Каждого Подменю Из ПодключенныеКоманды.ПодменюСУсловиямиВидимости Цикл
				КоллекцияКоманд = Подменю.КомандыСУсловиямиВидимости;
				Для Индекс = -КоллекцияКоманд.ВГраница() По 0 Цикл
					КомандаПодменю = КоллекцияКоманд[-Индекс];
					Если КомандаПодменю.ИмяВФорме = Команда.ИмяВФорме Тогда
						КоллекцияКоманд.Удалить(-Индекс);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			РанееДобавленныеКоманды.Удалить(Команда);
		КонецЦикла;
	КонецЕсли;

	Если ЗначениеЗаполнено(ПрефиксКоманд) И ПодключенныеКоманды.ВладельцыКоманд.Найти(ПрефиксКоманд) = Неопределено Тогда
		ПодключенныеКоманды.ВладельцыКоманд.Добавить(ПрефиксКоманд);
	КонецЕсли;

	ПодключенныеКоманды.ЕстьУсловияВидимости = ПодключенныеКоманды.ЕстьУсловияВидимости Или ПараметрыРазмещения.ЕстьУсловияВидимости;

	Элементы = Форма.Элементы;
	ПрефиксГрупп = ?(ЗначениеЗаполнено(ПараметрыРазмещения.ПрефиксГрупп), ПараметрыРазмещения.ПрефиксГрупп, "");

	КоманднаяПанель = ПараметрыРазмещения.КоманднаяПанель;
	Если КоманднаяПанель = Неопределено Тогда
		КоманднаяПанель = КоманднаяПанельФормы(Форма, ПрефиксГрупп, ПараметрыРазмещения.ЭтоФормаОбъекта);
	КонецЕсли;

	СведенияОВсехПодменю = СведенияОВсехПодменю();
	СведенияОВсехПодменю.Колонки.Добавить("ИменаКомандСмТакже", Новый ОписаниеТипов("Массив"));
	БыстрыйПоискСведенийОПодменю = Новый Соответствие;

	КорневыеПодменюИКоманды = ПодключенныеКоманды.КорневыеПодменюИКоманды;

	// Вывод команд.
	Команды.Сортировать("Вид, ПорядокВажности Возр, Порядок Возр, Представление Возр");
	СчетчикКомандСАвтогенерируемымИменем = 0;
	ВидыКоманд = ПодключаемыеКомандыПовтИсп.ВидыКоманд();
	#Вставка
	ВидыКоманд = Saby_ВидыКоманд(ВидыКоманд);
	#КонецВставки

	Для Каждого ВидКоманд Из ВидыКоманд Цикл
		КомандыВида = Команды.НайтиСтроки(Новый Структура("Вид", ВидКоманд.Имя)); // Массив из СтрокаТаблицыЗначений: см. ТаблицаКоманд

		Если КомандыВида.Количество() = 0 И ВидКоманд.Имя <> "СозданиеНаОсновании" Тогда
			Продолжить;
		КонецЕсли;

		ИмяПодменюПоУмолчанию = "";
		Если Не ПустаяСтрока(ВидКоманд.ИмяПодменю) Тогда
			ИмяПодменюПоУмолчанию = ПрефиксГрупп + ВидКоманд.ИмяПодменю;
		КонецЕсли;

		СведенияОПодменюПоУмолчанию = БыстрыйПоискСведенийОПодменю.Получить(НРег(ИмяПодменюПоУмолчанию));
		Если СведенияОПодменюПоУмолчанию = Неопределено Тогда
			СведенияОПодменюПоУмолчанию = ЗарегистрироватьПодменю(Элементы, СведенияОВсехПодменю, ИмяПодменюПоУмолчанию, 
			ВидКоманд, КоманднаяПанель);
			БыстрыйПоискСведенийОПодменю.Вставить(НРег(ИмяПодменюПоУмолчанию), СведенияОПодменюПоУмолчанию);
		КонецЕсли;

		Для Каждого Команда Из КомандыВида Цикл 
			Если ПустаяСтрока(Команда.Подменю) Тогда
				СведенияОПодменюКоманды = СведенияОПодменюПоУмолчанию;
			Иначе
				ИмяПодменю = ПрефиксГрупп + Команда.Подменю;
				СведенияОПодменюКоманды = БыстрыйПоискСведенийОПодменю.Получить(НРег(ИмяПодменю));
				Если СведенияОПодменюКоманды = Неопределено Тогда
					СведенияОПодменюКоманды = ЗарегистрироватьПодменю(Элементы, СведенияОВсехПодменю, ИмяПодменю,,,
					СведенияОПодменюПоУмолчанию);
					БыстрыйПоискСведенийОПодменю.Вставить(НРег(ИмяПодменю), СведенияОПодменюКоманды);
				КонецЕсли;
			КонецЕсли;

			ГруппаФормы = Неопределено; // ГруппаФормы
			Если Не ЗначениеЗаполнено(Команда.Важность)
				Или Не СведенияОПодменюКоманды.Группы.Свойство(Команда.Важность, ГруппаФормы) Тогда
				ГруппаФормы = СведенияОПодменюКоманды.ГруппаПоУмолчанию;
			КонецЕсли;

			Команда.ИмяВФорме = ОпределитьИмяКоманды(Форма, ГруппаФормы.Имя, Команда.Идентификатор, 
			СчетчикКомандСАвтогенерируемымИменем, ПрефиксКоманд);
			Команда.КлючПараметровРазмещения = КлючПараметровРазмещения;

			Подменю = СведенияОПодменюКоманды.Подменю; // ГруппаФормы
			ИмяКорневогоЭлемента = ?(ВидКоманд.Имя = "КоманднаяПанель", Команда.ИмяВФорме, Подменю.Имя);

			КомандаФормы = Форма.Команды.Добавить(Команда.ИмяВФорме);
			КомандаФормы.Действие = "Подключаемый_ВыполнитьКоманду";
			КомандаФормы.Заголовок = Команда.Представление;
			КомандаФормы.Подсказка   = КомандаФормы.Заголовок;
			КомандаФормы.Отображение = ?(ЗначениеЗаполнено(Команда.ОтображениеКнопки),
			Команда.ОтображениеКнопки, ОтображениеКнопки.КартинкаИТекст);
			Если ТипЗнч(Команда.Картинка) = Тип("Картинка") Тогда
				КомандаФормы.Картинка = Команда.Картинка;
			КонецЕсли;
			Если ТипЗнч(Команда.СочетаниеКлавиш) = Тип("СочетаниеКлавиш") Тогда
				КомандаФормы.СочетаниеКлавиш = Команда.СочетаниеКлавиш;
			КонецЕсли;
			Если СведенияОПодменюКоманды.Подменю = КоманднаяПанель
				И СтрДлина(Команда.Представление) > 35
				И ЗначениеЗаполнено(КомандаФормы.Картинка) Тогда
				КомандаФормы.Отображение = ОтображениеКнопки.Картинка;
			КонецЕсли;
			КомандаФормы.ИзменяетСохраняемыеДанные = Команда.ИзменяетВыбранныеОбъекты 
			И ПараметрыРазмещения.ЭтоФормаОбъекта И Форма.ТолькоПросмотр;

			КнопкаФормы = Элементы.Добавить(Команда.ИмяВФорме, Тип("КнопкаФормы"), ГруппаФормы);
			КнопкаФормы.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
			КнопкаФормы.ИмяКоманды = Команда.ИмяВФорме;
			Если Команда.ТолькоВоВсехДействиях = Истина Тогда
				ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
			ИначеЕсли Команда.ТолькоВоВсехДействиях = Ложь Тогда
				ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанели;
			Иначе
				ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.Авто;
			КонецЕсли;
			КнопкаФормы.ПоложениеВКоманднойПанели = ПоложениеВКоманднойПанели;

			Если Команда.Важность = "СмТакже" Тогда
				Если ВидКоманд.Имя = "КоманднаяПанель" Тогда
					КнопкаФормы.ТолькоВоВсехДействиях = Истина;
				Иначе
					СведенияОПодменюКоманды.ИменаКомандСмТакже.Добавить(Команда.ИмяВФорме);
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(Команда.ЗначениеПометки) И ЭтоПутьДоРеквизита(Команда.ЗначениеПометки) Тогда
				Команда.ЗначениеПометки = ВыражениеВычислениеПометки(Команда.ЗначениеПометки);
				ПодключенныеКоманды.КомандыСПометкой.Добавить(ОписаниеКомандыНаКлиенте(Команда, КнопкаФормы, ПрефиксКоманд));
			КонецЕсли;

			СвойстваКорневогоПодменюКоманды = КорневыеПодменюИКоманды[ИмяКорневогоЭлемента];
			Если СвойстваКорневогоПодменюКоманды = Неопределено Тогда
				СвойстваКорневогоПодменюКоманды = СвойстваКорневогоПодменюКоманды();
				СвойстваКорневогоПодменюКоманды.ЕстьВКоманднойПанели = 
				КнопкаФормы.ПоложениеВКоманднойПанели <> ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
				СвойстваКорневогоПодменюКоманды.ПрефиксКоманд = ПрефиксКоманд;
				КорневыеПодменюИКоманды.Вставить(ИмяКорневогоЭлемента, СвойстваКорневогоПодменюКоманды);
			КонецЕсли;

			СведенияОПодменюКоманды.ВыведеноКоманд = СведенияОПодменюКоманды.ВыведеноКоманд + 1;
			СведенияОПодменюКоманды.ПоследняяКоманда = КомандаФормы;
			Если Команда.ЕстьУсловияВидимости Тогда
				СведенияОПодменюКоманды.ЕстьКомандыСУсловиямиВидимости = Истина;

				СведенияОКоманде = Новый Структура;
				СведенияОКоманде.Вставить("ИмяВФорме");
				СведенияОКоманде.Вставить("ТипПараметра");
				СведенияОКоманде.Вставить("УсловияВидимости");
				СведенияОКоманде.Вставить("УсловияВидимостиПоТипамОбъектов");
				СведенияОКоманде.Вставить("ПрефиксКоманд");
				ЗаполнитьЗначенияСвойств(СведенияОКоманде, Команда);

				СведенияОКоманде.ПрефиксКоманд = ПрефиксКоманд;
				СведенияОПодменюКоманды.КомандыСУсловиямиВидимости.Добавить(СведенияОКоманде);
			ИначеЕсли Не Команда.ТолькоВоВсехДействиях Тогда
				СведенияОПодменюКоманды.ЕстьКомандыБезУсловийВидимости = Истина;
			КонецЕсли;
		КонецЦикла;

		СозданиеНаОсновании.ПриВыводеКоманд(Форма, ВидКоманд, СведенияОПодменюПоУмолчанию, ПараметрыРазмещения);
	КонецЦикла;

	// Команда-заглушка нужна всегда.
	КомандаЗаглушка = Форма.Команды.Найти("КомандаДляВыводаВПустоеПодменю");
	Если КомандаЗаглушка = Неопределено Тогда
		КомандаЗаглушка = Форма.Команды.Добавить("КомандаДляВыводаВПустоеПодменю");
		КомандаЗаглушка.Заголовок = НСтр("ru = '(нет)'");
	КонецЕсли;

	// Постобработка задействованных подменю.
	Для Каждого СведенияОПодменю Из СведенияОВсехПодменю Цикл
		Если СведенияОПодменю.ВыведеноКоманд = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЭтоКоманднаяПанель = (СведенияОПодменю.Подменю = КоманднаяПанель);
		КомандаФормы = СведенияОПодменю.ПоследняяКоманда;
		Подменю = СведенияОПодменю.Подменю; // ГруппаФормы

		Если Не ЭтоКоманднаяПанель Тогда
			Если СведенияОПодменю.ВыведеноКоманд = 1 И КомандаФормы <> Неопределено Тогда
				// Превращение подменю в кнопку когда выведена 1 команда с коротким заголовком.
				Если Не ЗначениеЗаполнено(КомандаФормы.Картинка) И Подменю.Вид = ВидГруппыФормы.Подменю Тогда
					КомандаФормы.Картинка = Подменю.Картинка;
				КонецЕсли;

				Если Не ЗначениеЗаполнено(КомандаФормы.Картинка) Тогда
					КомандаФормы.Картинка = СведенияОПодменю.КартинкаПодменю;
				КонецЕсли;			

				Если СтрДлина(КомандаФормы.Заголовок) <= 35 И Подменю.Отображение <> ОтображениеКнопки.Картинка Тогда
					КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
				Иначе
					КомандаФормы.Отображение = ОтображениеКнопки.Картинка;
				КонецЕсли;
				Подменю.Вид = ВидГруппыФормы.ГруппаКнопок;
				КомандаФормы.Подсказка = КомандаФормы.Заголовок;
			Иначе
				// Добавление кнопок-заглушек, которые показываются когда в подменю скрыты все команды.
				ИмяКомандыЗаглушки = Подменю.Имя + "Заглушка";
				Если Элементы.Найти(ИмяКомандыЗаглушки) = Неопределено Тогда
					КнопкаФормы = Элементы.Добавить(ИмяКомандыЗаглушки, Тип("КнопкаФормы"), Подменю);
					КнопкаФормы.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
					КнопкаФормы.ИмяКоманды  = "КомандаДляВыводаВПустоеПодменю";
					КнопкаФормы.Видимость   = Ложь;
					КнопкаФормы.Доступность = Ложь;
					КнопкаФормы.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанели;
				КонецЕсли;
			КонецЕсли;
			Если СведенияОПодменю.ВыведеноКоманд > 0
				И СведенияОПодменю.ВыведеноКоманд = СведенияОПодменю.ИменаКомандСмТакже.Количество() Тогда
				Для Каждого ИмяВФорме Из СведенияОПодменю.ИменаКомандСмТакже Цикл
					КомандаФормы = Элементы[ИмяВФорме];
					КомандаФормы.ТолькоВоВсехДействиях = Истина;
					Если Не ЗначениеЗаполнено(КомандаФормы.Картинка) И Подменю.Вид = ВидГруппыФормы.Подменю Тогда
						КомандаФормы.Картинка = Подменю.Картинка;
					КонецЕсли;
				КонецЦикла;
				Подменю.Вид = ВидГруппыФормы.ГруппаКнопок;
			КонецЕсли;
		КонецЕсли;

		Если СведенияОПодменю.ЕстьКомандыСУсловиямиВидимости Тогда
			КраткиеСведенияОПодменю = КраткиеСведенияОПодменю(СведенияОПодменю);
			КраткиеСведенияОПодменю.Имя = Подменю.Имя;
			ПодключенныеКоманды.ПодменюСУсловиямиВидимости.Добавить(КраткиеСведенияОПодменю);
		КонецЕсли;
	КонецЦикла;

	Если РанееДобавленныеКоманды <> Неопределено Тогда
		РанееДобавленныеКоманды = ПолучитьИзВременногоХранилища(ПодключенныеКоманды.АдресТаблицыКоманд);
		Если ТипЗнч(РанееДобавленныеКоманды) = Тип("ТаблицаЗначений") Тогда
			Индекс = -1;
			Для Каждого СтрокаТаблицы Из РанееДобавленныеКоманды Цикл
				Индекс = Индекс + 1;
				ЗаполнитьЗначенияСвойств(Команды.Вставить(Индекс), СтрокаТаблицы);
			КонецЦикла;
		КонецЕсли;
		УдалитьИзВременногоХранилища(ПодключенныеКоманды.АдресТаблицыКоманд);
	КонецЕсли;

	Команды.Колонки.Удалить("СочетаниеКлавиш");
	ПодключенныеКоманды.АдресТаблицыКоманд = ПоместитьВоВременноеХранилище(Команды, Форма.УникальныйИдентификатор);

	
	#Вставка
	//В бухгалтерии нужно немного подвинуть группу команд в лево. иначе ее не видно на панели задач
	Если Найти(Метаданные.Имя, "Бухгалтерия") = 0 Тогда Возврат; КонецЕсли;
	Если ПараметрыРазмещения.КоманднаяПанель = Неопределено Тогда Возврат; КонецЕсли;
	РодительЭлемента	= Форма.Элементы.Найти(ПараметрыРазмещения.КоманднаяПанель.Имя);
	ДочерниеЭлементы	= РодительЭлемента.ПодчиненныеЭлементы;
	ПодгруппаСБИС		= ДочерниеЭлементы.Найти("Saby_СБИС");
	СтрокаПоиска		= Неопределено;
	Для Каждого ЭлементДочерний Из  ДочерниеЭлементы Цикл
		Если Найти(ЭлементДочерний.Имя, "СтрокаПоиска" ) > 0 Тогда
			СтрокаПоиска	= ЭлементДочерний;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если
		РодительЭлемента <> Неопределено И
		СтрокаПоиска <> Неопределено И
		ПодгруппаСБИС <> Неопределено
											Тогда
		Форма.Элементы.Переместить(ПодгруппаСБИС, РодительЭлемента, СтрокаПоиска);
	КонецЕсли;
	#КонецВставки
	
КонецПроцедуры
